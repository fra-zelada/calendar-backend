{"version":3,"sources":["components/helpers/fetch.js","types/types.js","components/helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","startLogout","dispatch","clear","logout","login","user","useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","charAt","toUpperCase","slice","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setdateStart","dateEnd","setdateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setformValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","console","log","trim","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","showMultiDayTimes","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e52e25a4.chunk.js","sourcesContent":["\r\n\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; //\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; //\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                \"x-token\": token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                \"x-token\": token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    eventStartAddNew: '[event] Start Add New',\r\n    eventAddNew: '[event] Add New',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n};\r\n","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( \r\n        (e) => ( {\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate()\r\n        } )\r\n        )\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../components/helpers/fetch\";\r\nimport { prepareEvents } from \"../components/helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        try {\r\n\r\n            const { uid, name } = getState().auth;\r\n\r\n            const resp = await fetchConToken('events', event, 'POST')\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                console.log( event );\r\n                dispatch( eventAddNew( event ))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            Swal.fire('Error','Error al guardar el evento','error')\r\n        }\r\n        \r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            //console.log( event )\r\n            const resp = await fetchConToken(`events/${ event.id }`, event ,'PUT')\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ))\r\n            }\r\n            else\r\n            {\r\n                Swal.fire('Error', `No se pudo actualizar evento. ${ body.msg }` , 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', `Error al actualizar evento` , 'error')\r\n            console.log(error)\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async ( dispatch, getState ) => {\r\n        try {\r\n            const {id} = getState().calendar.activeEvent;\r\n            //console.log( event )\r\n            const resp = await fetchConToken(`events/${ id }`, {} ,'DELETE')\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted())\r\n            }\r\n            else\r\n            {\r\n                Swal.fire('Error', `No se pudo eliminar evento. ${ body.msg }` , 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', `Error al eliminar evento` , 'error')\r\n            console.log(error)\r\n\r\n        }\r\n    }\r\n}\r\n\r\n const eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n    \r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n        \r\n            const resp = fetchConToken('events');\r\n            const body = await (await resp).json()\r\n            \r\n            const events = prepareEvents( body.eventos );\r\n            dispatch( eventLoaded( events ));\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n            Swal.fire('Error', 'Error al cargar eventos', 'error')\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => (\r\n    { type: types.eventLogout}\r\n)","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../components/helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken('auth',{email, password},'POST');\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        }\r\n        else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name) => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken('auth/new',{ email, password, name },'POST');\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        }\r\n        else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () =>{\r\n    return async( dispatch ) => {\r\n\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        }\r\n        else {\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n        type: types.authCheckingFinish\r\n    }\r\n)\r\n\r\nexport const startLogout = () => {\r\n\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear();\r\n        dispatch( eventLogout())\r\n        dispatch(logout());\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => ({\r\n\r\n        type: types.authLogout\r\n\r\n})\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n     const handleInputChange = ({target}) =>{\r\n            \r\n        setValues({...values,\r\n        [target.name]: target.value})\r\n    \r\n    }\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    return [values, handleInputChange, reset ];\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n   const dispatch = useDispatch()\r\n   \r\n   const [ formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    })\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    })\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2)\r\n        {return Swal.fire('Error', 'Contraseñas no coinciden','error')}\r\n        else {\r\n            dispatch(startRegister(rEmail, rPassword1, rName)) \r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange= { handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\nconst {name} = useSelector(state => state.auth)\r\nconst dispatch = useDispatch()\r\n\r\nconst handleLogout = () => {\r\n\r\n    dispatch(startLogout())\r\n\r\n}\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name.charAt(0).toUpperCase() + name.slice(1) }\r\n            </span>\r\n\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type:   types.uiCloseModal\r\n})","import React from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\nimport { useEffect } from 'react';\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: '50%',\r\n    left: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    marginRight: '-50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n};\r\n\r\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n  title: '',\r\n  notes: '',\r\n  start: now.toDate(),\r\n  end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n  const [dateStart, setdateStart] = useState(now.toDate())\r\n  const [dateEnd, setdateEnd] = useState(nowPlus1.toDate())\r\n  const [titleValid, setTitleValid] = useState(true)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { modalOpen } = useSelector(state => state.ui)\r\n  const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n\r\n  const [formValues, setformValues] = useState(initEvent)\r\n\r\n  const { notes, title, start, end } = formValues;\r\n\r\n  useEffect(() => {\r\n    if (activeEvent) \r\n    { \r\n      setformValues(activeEvent) \r\n      setdateStart(activeEvent.start)\r\n      setdateEnd(activeEvent.end);\r\n    }\r\n    else {\r\n      setformValues(initEvent)\r\n    }\r\n\r\n    //setformValues(activeEvent)\r\n  }, [activeEvent, setformValues])\r\n\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setformValues({\r\n      ...formValues,\r\n      [target.name]: target.value\r\n    })\r\n  }\r\n\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal())\r\n    setformValues(initEvent);\r\n    dispatch(eventClearActiveEvent())\r\n  }\r\n\r\n  const handleStartDateChange = (e) => {\r\n    setdateStart(e);\r\n    setformValues({\r\n      ...formValues,\r\n      start: e\r\n    })\r\n  }\r\n\r\n  const handleEndDateChange = (e) => {\r\n    setdateEnd(e);\r\n    setformValues({\r\n      ...formValues,\r\n      end: e\r\n    })\r\n  }\r\n\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      console.log('Fecha término debe ser mayor')\r\n      return Swal.fire('Error', 'Fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n    }\r\n    if (title.trim() < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n    if (activeEvent) {\r\n      dispatch( eventStartUpdate( formValues ) )\r\n    }\r\n    else {\r\n      dispatch(eventStartAddNew({\r\n        ...formValues\r\n        // ,\r\n        // id: new Date().getTime(),\r\n        // user: {\r\n        //   _id: '123',\r\n        //   name: 'Francisco'\r\n        // }\r\n      }))\r\n    }\r\n\r\n    setTitleValid(true);\r\n    closeModal();\r\n  }\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      // onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n    >\r\n      <h1> {(!!activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\r\n      <hr />\r\n      <form\r\n        className=\"container\"\r\n        onSubmit={handleSubmitForm}\r\n      >\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            minDate={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n          />\r\n\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickNew = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst handleDelete = () => {\r\n\r\n    dispatch(eventStartDelete())\r\n\r\n}\r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { messages } from '../helpers/calendar-messages'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch } from 'react-redux';\r\nimport  { uiOpenModal } from '../../actions/ui'\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { useSelector } from 'react-redux';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n// const events = [{\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar pastel',\r\n//     user: {\r\n//         _id:'123',\r\n//         name: 'Francisco'\r\n//     }\r\n// }]\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading());\r\n\r\n    }, [ dispatch ])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())    \r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        //dispatch(uiOpenModal());\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStylesGetter = (event, start, end, isSelected) => {\r\n        \r\n        \r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                showMultiDayTimes\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStylesGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n\r\n            />\r\n\r\n        <AddNewFab/> \r\n        \r\n        { activeEvent && <DeleteEventFab/> }\r\n\r\n        <CalendarModal/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n            (\r\n                (isAuthenticated) ?\r\n                    (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )\r\n\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes =\r\n{\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component:  PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) =>\r\n            (\r\n                // si está logeado, lo redirigimos a las pantallas de autenticado, si no, desplegamos componente recibido por parámetros\r\n                (isAuthenticated) \r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n                     \r\n            )\r\n\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes =\r\n{\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component:  PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking())\r\n        \r\n    }, [dispatch])\r\n\r\n\r\n\r\n\r\n    if ( checking )\r\n    {\r\n        return <h5>Espere...</h5>\r\n    }\r\n    else\r\n{\r\n    return (\r\n        // <Router>\r\n        //     <div>\r\n        //         <Switch>\r\n        //             <Route exact path=\"/login\">\r\n        //                 <LoginScreen />\r\n        //             </Route>\r\n        //             <Route path=\"/Calendar\">\r\n        //                 <CalendarScreen />\r\n        //             </Route>\r\n        //             <Redirect\r\n        //                 to=\"/login\"\r\n        //             />\r\n        //         </Switch>\r\n        //     </div>\r\n        // </Router>\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact\r\n                        path=\"/login\"\r\n                        isAuthenticated={ !!uid } \r\n                        component={ LoginScreen }\r\n                    />\r\n                    <PrivateRoute \r\n                        exact\r\n                        path=\"/\"\r\n                        isAuthenticated={ !!uid } \r\n                        component={ CalendarScreen }\r\n                    />\r\n                    {/* <Route exact path=\"/login\" component={LoginScreen} />\r\n                    <Route exact path=\"/\" component={CalendarScreen} /> */}\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n         case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n             ;\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: '15631564561',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar pastel',\r\n//     user: {\r\n//         _id:'123',\r\n//         name: 'Francisco'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n\r\n     events: [\r\n       \r\n    ],\r\n    activeEvent: null\r\n\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {...state,\r\n                    activeEvent: action.payload}\r\n        case types.eventAddNew:\r\n            \r\n           // console.log('state',state); return state;\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n                \r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n            \r\n        \r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map( e=> \r\n                    (e.id === action.payload.id) ? action.payload: e\r\n                    )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter( e=> \r\n                    (e.id !== state.activeEvent.id) \r\n                    ),\r\n                activeEvent: null\r\n                \r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n//clase 311\r\n\r\n//https://github.com/zalmoxisus/redux-devtools-extension#usage\r\n//configuración necesaria para la herramienta de desarrollo\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n//https://www.npmjs.com/package/redux-thunk\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n        <AppRouter/>\r\n        </Provider>\r\n        )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n  <CalendarApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}